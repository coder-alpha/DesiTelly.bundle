#!/usr/bin/env python

"""DesiTelly Service Code"""

ART = 'http://i.imgur.com/GwSnkxE.jpg'
COVER = 'http://i.imgur.com/0snKSZt.png'

####################################################################################################
def MetadataObjectForURL(url):

	d = get_data(url)
	thumb1 = d['thumb']
	thumb2 = thumb1
	if thumb1 == '':
		thumb1 = COVER
		thumb2 = ART

	return VideoClipObject(
		title=d['title'],
		thumb=Resource.ContentsOfURLWithFallback(thumb1, COVER),
		art=Resource.ContentsOfURLWithFallback(thumb2, ART),
		source_title='Desi Telly'
	)

####################################################################################################
@deferred
def MediaObjectsForURL(url):

	d = get_data(url)
	parts = []
	for u in d['urls']:
		if '.json' in u:
			json = JSON.ObjectFromURL(u)

			f4m_url = json['content']['media']['f4m']
			xml = XML.ElementFromURL(f4m_url)
			
			burl = xml.xpath('//a:baseURL/text()', namespaces={'a': 'http://ns.adobe.com/f4m/1.0'})[0]
			vurls = xml.xpath('//a:media/@url', namespaces={'a': 'http://ns.adobe.com/f4m/1.0'})
			
			u=burl + '/' + vurls[0]
			
		po = PartObject(key=u)
		parts.append(po)
	return [
		MediaObject(
			container=Container.MP4,
			video_codec=VideoCodec.H264,
			audio_codec=AudioCodec.AAC,
			audio_channels=2,
			optimized_for_streaming=True,
			parts=parts
			)
		]

####################################################################################################
def get_data(url):
	return JSON.ObjectFromString(D(url.split('desitelly://')[1]))
